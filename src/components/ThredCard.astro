---
import { formatDistanceToNow } from 'date-fns';

export interface Props {
  thred: any;
  variant?: 'default' | 'compact' | 'hero' | 'breaking';
}

const { thred, variant = 'default' } = Astro.props;
const timeAgo = formatDistanceToNow(new Date(thred.timestamp), { addSuffix: true });

const isHero = variant === 'hero';
const isCompact = variant === 'compact';
const isBreaking = variant === 'breaking' || thred.isBreaking;
---

<article class={`group relative bg-white dark:bg-slate-800 rounded-2xl shadow-sm hover:shadow-xl dark:shadow-slate-900/20 transition-all duration-300 overflow-hidden border border-slate-200 dark:border-slate-700 hover:border-primary-200 dark:hover:border-primary-800 ${
  isHero ? 'col-span-full lg:col-span-2 row-span-2' : 
  isCompact ? '' : ''
}`}>
  
  <!-- Breaking News Badge -->
  {isBreaking && (
    <div class="absolute top-4 left-4 z-10">
      <div class="flex items-center space-x-1 bg-red-500 text-white px-3 py-1 rounded-full text-xs font-bold animate-pulse">
        <span class="w-2 h-2 bg-white rounded-full"></span>
        <span>BREAKING</span>
      </div>
    </div>
  )}

  <!-- Trending Badge -->
  {thred.isTrending && !isBreaking && (
    <div class="absolute top-4 left-4 z-10">
      <div class="flex items-center space-x-1 bg-orange-500 text-white px-3 py-1 rounded-full text-xs font-bold">
        <span>üî•</span>
        <span>TRENDING</span>
      </div>
    </div>
  )}

  <!-- Featured Image -->
  {thred.featured_image && (
    <div class={`relative overflow-hidden ${
      isHero ? 'h-80 lg:h-96' : 
      isCompact ? 'h-32' : 'h-48'
    }`}>
      <img 
        src={thred.featured_image} 
        alt={thred.title}
        class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-500"
        loading="lazy"
      />
      
      <!-- Gradient overlay -->
      <div class="absolute inset-0 bg-gradient-to-t from-black/60 via-transparent to-transparent"></div>
      
      <!-- Hub badge -->
      {thred.hub && (
        <div class="absolute top-4 right-4">
          <a 
            href={`/hub/${thred.hub.slug}`}
            class="inline-flex items-center px-3 py-1.5 rounded-full text-white text-sm font-medium backdrop-blur-sm shadow-lg hover:scale-105 transition-transform"
            style={`background-color: ${thred.hub.color}cc`}
          >
            <span class="mr-1">{thred.hub.icon}</span>
            {thred.hub.name}
          </a>
        </div>
      )}
    </div>
  )}
  
  <!-- Content -->
  <div class={`p-6 ${isHero ? 'lg:p-8' : isCompact ? 'p-4' : 'p-6'}`}>
    <!-- Meta info -->
    <div class="flex items-center justify-between text-sm text-slate-500 dark:text-slate-400 mb-3">
      <div class="flex items-center space-x-2">
        <span class="font-medium">{thred.source}</span>
        <span>‚Ä¢</span>
        <time datetime={thred.timestamp}>{timeAgo}</time>
        <span>‚Ä¢</span>
        <span>{thred.readTime} min read</span>
      </div>
      <div class="flex items-center space-x-1 text-xs">
        <span class="text-primary-600 dark:text-primary-400 font-bold">‚ö° {thred.loopScore}</span>
      </div>
    </div>
    
    <!-- Title -->
    <h2 class={`font-bold text-slate-900 dark:text-white mb-3 line-clamp-2 group-hover:text-primary-600 dark:group-hover:text-primary-400 transition-colors duration-200 ${
      isHero ? 'text-3xl lg:text-4xl leading-tight' : 
      isCompact ? 'text-lg' : 'text-xl'
    }`}>
      <a href={`/thred/${thred.slug}`} class="hover:underline decoration-primary-500 decoration-2 underline-offset-4">
        {thred.title}
      </a>
    </h2>
    
    <!-- Summary -->
    <p class={`text-slate-600 dark:text-slate-300 mb-4 leading-relaxed ${
      isHero ? 'text-lg line-clamp-3' : 
      isCompact ? 'text-sm line-clamp-2' : 'text-sm line-clamp-3'
    }`}>
      {thred.summary}
    </p>
    
    <!-- Tags -->
    {!isCompact && (
      <div class="flex flex-wrap gap-2 mb-4">
        {thred.tags.slice(0, 3).map((tag) => (
          <span class="px-2 py-1 bg-slate-100 dark:bg-slate-700 text-slate-600 dark:text-slate-300 text-xs rounded-full">
            #{tag}
          </span>
        ))}
      </div>
    )}
    
    <!-- Action Buttons -->
    <div class="flex items-center justify-between">
      <div class="flex items-center space-x-4">
        <button class="flex items-center space-x-1 text-slate-500 dark:text-slate-400 hover:text-primary-600 dark:hover:text-primary-400 transition-colors text-sm">
          <span>üîÑ</span>
          <span>{thred.shareCount}</span>
        </button>
        <button class="flex items-center space-x-1 text-slate-500 dark:text-slate-400 hover:text-red-500 transition-colors text-sm">
          <span>‚ù§Ô∏è</span>
          <span>{thred.saveCount}</span>
        </button>
        <button class="flex items-center space-x-1 text-slate-500 dark:text-slate-400 hover:text-blue-500 transition-colors text-sm">
          <span>üí¨</span>
          <span>{thred.discussCount}</span>
        </button>
      </div>
      
      <a 
        href={`/thred/${thred.slug}`} 
        class="inline-flex items-center text-primary-600 dark:text-primary-400 hover:text-primary-700 dark:hover:text-primary-300 font-medium text-sm transition-colors duration-200 group/link"
      >
        Jump in
        <svg class="w-4 h-4 ml-1 group-hover/link:translate-x-1 transition-transform duration-200" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
        </svg>
      </a>
    </div>
  </div>
  
  <!-- Hover effect overlay -->
  <div class="absolute inset-0 bg-gradient-to-r from-primary-500/5 to-primary-600/5 opacity-0 group-hover:opacity-100 transition-opacity duration-300 pointer-events-none"></div>
</article>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>