---
import { dummyCategories } from '../lib/dummyData';
import ThemeToggle from './ThemeToggle';

// Use dummy data for now - replace with Supabase query when ready
const categories = dummyCategories;
---

<header class="sticky top-0 z-50 bg-cream-50/80 dark:bg-slate-900/80 backdrop-blur-md border-b border-cream-200 dark:border-slate-700">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="flex justify-between items-center h-16">
      <!-- Logo -->
      <div class="flex-shrink-0">
        <a href="/" class="flex items-center group">
          <div class="relative">
            <div class="w-10 h-10 bg-gradient-to-br from-luxury-500 to-luxury-700 rounded-xl flex items-center justify-center shadow-lg group-hover:shadow-xl transition-all duration-300 group-hover:scale-105">
              <span class="text-white font-bold text-lg">T</span>
            </div>
            <div class="absolute -inset-1 bg-gradient-to-br from-luxury-400 to-luxury-600 rounded-xl opacity-0 group-hover:opacity-20 transition-opacity duration-300"></div>
          </div>
          <div class="ml-3">
            <span class="text-2xl font-bold bg-gradient-to-r from-luxury-600 to-luxury-800 dark:from-luxury-400 dark:to-luxury-600 bg-clip-text text-transparent">
              Threda
            </span>
            <div class="text-xs text-slate-500 dark:text-slate-400 font-medium tracking-wide">
              TRENDING INSIGHTS
            </div>
          </div>
        </a>
      </div>

      <!-- Desktop Navigation -->
      <nav class="hidden md:flex items-center space-x-1">
        <a 
          href="/" 
          class="px-4 py-2 text-slate-700 dark:text-slate-300 hover:text-luxury-600 dark:hover:text-luxury-400 font-medium transition-all duration-200 rounded-lg hover:bg-cream-100 dark:hover:bg-slate-800"
        >
          Home
        </a>
        {categories.map((category) => (
          <a 
            href={`/category/${category.slug}`}
            class="px-4 py-2 text-slate-700 dark:text-slate-300 hover:text-luxury-600 dark:hover:text-luxury-400 font-medium transition-all duration-200 rounded-lg hover:bg-cream-100 dark:hover:bg-slate-800 relative group"
          >
            {category.name}
            <div 
              class="absolute bottom-0 left-1/2 transform -translate-x-1/2 w-0 h-0.5 group-hover:w-full transition-all duration-300 rounded-full"
              style={`background-color: ${category.color}`}
            ></div>
          </a>
        ))}
      </nav>

      <!-- Right side controls -->
      <div class="flex items-center space-x-3">
        <ThemeToggle client:load />
        
        <!-- Mobile menu button -->
        <button 
          id="mobile-menu-button"
          type="button" 
          class="md:hidden p-2 rounded-lg text-slate-700 dark:text-slate-300 hover:text-luxury-600 dark:hover:text-luxury-400 hover:bg-cream-100 dark:hover:bg-slate-800 transition-all duration-200"
          aria-expanded="false"
        >
          <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
          </svg>
        </button>
      </div>
    </div>

    <!-- Mobile menu -->
    <div id="mobile-menu" class="md:hidden hidden border-t border-cream-200 dark:border-slate-700 py-4">
      <div class="space-y-1">
        <a 
          href="/" 
          class="block px-4 py-3 text-slate-700 dark:text-slate-300 hover:text-luxury-600 dark:hover:text-luxury-400 font-medium transition-all duration-200 rounded-lg hover:bg-cream-100 dark:hover:bg-slate-800"
        >
          Home
        </a>
        {categories.map((category) => (
          <a 
            href={`/category/${category.slug}`}
            class="block px-4 py-3 text-slate-700 dark:text-slate-300 hover:text-luxury-600 dark:hover:text-luxury-400 font-medium transition-all duration-200 rounded-lg hover:bg-cream-100 dark:hover:bg-slate-800"
          >
            {category.name}
          </a>
        ))}
      </div>
    </div>
  </div>
</header>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const button = document.getElementById('mobile-menu-button');
    const menu = document.getElementById('mobile-menu');
    
    if (button && menu) {
      button.addEventListener('click', function() {
        const isExpanded = button.getAttribute('aria-expanded') === 'true';
        button.setAttribute('aria-expanded', !isExpanded ? 'true' : 'false');
        menu.classList.toggle('hidden');
      });
    }
  });
</script>
</header>