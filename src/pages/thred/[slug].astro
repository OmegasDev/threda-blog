---
import { formatDistanceToNow } from 'date-fns';
import Layout from '../../layouts/Layout.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import ThredCard from '../../components/ThredCard.astro';
import { dummyThreds } from '../../lib/dummyData';

export async function getStaticPaths() {
  const threds = dummyThreds;
  return threds.map((thred) => ({
    params: { slug: thred.slug },
  }));
}

const { slug } = Astro.params;
const thred = dummyThreds.find(t => t.slug === slug);

if (!thred) {
  return Astro.redirect('/404');
}

// Get related threds
const relatedThreds = dummyThreds
  .filter(t => t.hub_id === thred.hub_id && t.id !== thred.id)
  .slice(0, 3);

const timeAgo = formatDistanceToNow(new Date(thred.timestamp), { addSuffix: true });
---

<Layout 
  title={`${thred.title} - Threda`}
  description={thred.summary}
  ogImage={thred.featured_image}
>
  <Header />
  
  <main class="min-h-screen bg-slate-50 dark:bg-slate-900">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
      <div class="grid grid-cols-1 lg:grid-cols-4 gap-8">
        <!-- Main Article Content -->
        <article class="lg:col-span-3">
          <div class="bg-white dark:bg-slate-800 rounded-2xl p-8 border border-slate-200 dark:border-slate-700">
            <!-- Breadcrumb -->
            <nav class="flex items-center space-x-2 text-sm text-slate-500 dark:text-slate-400 mb-6">
              <a href="/" class="hover:text-primary-600 dark:hover:text-primary-400 transition-colors">The Loop</a>
              <span>/</span>
              {thred.hub && (
                <>
                  <a 
                    href={`/hub/${thred.hub.slug}`} 
                    class="hover:text-primary-600 dark:hover:text-primary-400 transition-colors flex items-center"
                  >
                    <span class="mr-1">{thred.hub.icon}</span>
                    {thred.hub.name}
                  </a>
                  <span>/</span>
                </>
              )}
              <span class="text-slate-400 dark:text-slate-500 truncate">Thred</span>
            </nav>

            <!-- Breaking/Trending Badges -->
            <div class="flex items-center space-x-3 mb-6">
              {thred.isBreaking && (
                <div class="flex items-center space-x-1 bg-red-500 text-white px-3 py-1 rounded-full text-sm font-bold">
                  <span class="w-2 h-2 bg-white rounded-full animate-pulse"></span>
                  <span>BREAKING</span>
                </div>
              )}
              {thred.isTrending && (
                <div class="flex items-center space-x-1 bg-orange-500 text-white px-3 py-1 rounded-full text-sm font-bold">
                  <span>üî•</span>
                  <span>TRENDING</span>
                </div>
              )}
              {thred.hub && (
                <a 
                  href={`/hub/${thred.hub.slug}`}
                  class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium text-white hover:opacity-90 transition-opacity"
                  style={`background-color: ${thred.hub.color}`}
                >
                  <span class="mr-1">{thred.hub.icon}</span>
                  {thred.hub.name}
                </a>
              )}
            </div>
            
            <!-- Title -->
            <h1 class="text-3xl md:text-4xl lg:text-5xl font-bold text-slate-900 dark:text-white mb-6 leading-tight">
              {thred.title}
            </h1>
            
            <!-- Meta Info -->
            <div class="flex flex-wrap items-center gap-4 mb-6 text-slate-600 dark:text-slate-400">
              <div class="flex items-center space-x-2">
                <span class="font-medium">{thred.source}</span>
                <span>‚Ä¢</span>
                <span>By {thred.author}</span>
              </div>
              <div class="flex items-center space-x-2">
                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                </svg>
                <time datetime={thred.timestamp}>{timeAgo}</time>
              </div>
              <div class="flex items-center space-x-2">
                <span>{thred.readTime} min read</span>
                <span>‚Ä¢</span>
                <span>{thred.viewCount.toLocaleString()} views</span>
              </div>
              <div class="flex items-center space-x-1 text-primary-600 dark:text-primary-400 font-bold">
                <span>‚ö°</span>
                <span>{thred.loopScore} Loop Score</span>
              </div>
            </div>

            <!-- Summary -->
            <div class="text-lg text-slate-700 dark:text-slate-300 leading-relaxed mb-8 font-medium border-l-4 border-primary-500 pl-6 bg-primary-50 dark:bg-primary-900/20 py-4 rounded-r-lg">
              {thred.summary}
            </div>

            <!-- Featured Image -->
            {thred.featured_image && (
              <div class="mb-8">
                <img 
                  src={thred.featured_image} 
                  alt={thred.title}
                  class="w-full h-64 lg:h-96 object-cover rounded-2xl shadow-xl"
                />
              </div>
            )}

            <!-- Content -->
            <div class="prose prose-lg prose-slate dark:prose-invert max-w-none mb-8">
              <div set:html={thred.content}></div>
            </div>

            <!-- Tags -->
            <div class="flex flex-wrap gap-2 mb-8">
              {thred.tags.map((tag) => (
                <span class="px-3 py-1 bg-slate-100 dark:bg-slate-700 text-slate-600 dark:text-slate-300 text-sm rounded-full hover:bg-primary-100 dark:hover:bg-primary-900/30 transition-colors cursor-pointer">
                  #{tag}
                </span>
              ))}
            </div>

            <!-- Action Buttons -->
            <div class="flex items-center justify-between pt-8 border-t border-slate-200 dark:border-slate-700">
              <div class="flex items-center space-x-6">
                <button class="flex items-center space-x-2 px-4 py-2 bg-primary-100 dark:bg-primary-900/30 text-primary-700 dark:text-primary-300 rounded-lg hover:bg-primary-200 dark:hover:bg-primary-900/50 transition-colors">
                  <span>üîÑ</span>
                  <span>Share ({thred.shareCount})</span>
                </button>
                <button class="flex items-center space-x-2 px-4 py-2 bg-red-100 dark:bg-red-900/30 text-red-700 dark:text-red-300 rounded-lg hover:bg-red-200 dark:hover:bg-red-900/50 transition-colors">
                  <span>‚ù§Ô∏è</span>
                  <span>Save ({thred.saveCount})</span>
                </button>
                <button class="flex items-center space-x-2 px-4 py-2 bg-blue-100 dark:bg-blue-900/30 text-blue-700 dark:text-blue-300 rounded-lg hover:bg-blue-200 dark:hover:bg-blue-900/50 transition-colors">
                  <span>üí¨</span>
                  <span>Discuss ({thred.discussCount})</span>
                </button>
              </div>
              
              <div class="text-sm text-slate-500 dark:text-slate-400">
                Loop Score: <span class="font-bold text-primary-600 dark:text-primary-400">‚ö° {thred.loopScore}</span>
              </div>
            </div>
          </div>
        </article>

        <!-- Sidebar -->
        <aside class="lg:col-span-1">
          <div class="sticky top-24 space-y-6">
            <!-- Author Info -->
            <div class="bg-white dark:bg-slate-800 rounded-2xl p-6 border border-slate-200 dark:border-slate-700">
              <h3 class="text-lg font-bold text-slate-900 dark:text-white mb-4">Source</h3>
              <div class="flex items-center space-x-3">
                <div class="w-12 h-12 bg-primary-100 dark:bg-primary-900/30 rounded-full flex items-center justify-center">
                  <span class="text-primary-600 dark:text-primary-400 font-bold">
                    {thred.source.charAt(0)}
                  </span>
                </div>
                <div>
                  <div class="font-semibold text-slate-900 dark:text-white">{thred.source}</div>
                  <div class="text-sm text-slate-500 dark:text-slate-400">By {thred.author}</div>
                </div>
              </div>
            </div>
            
            <!-- Hub Info -->
            {thred.hub && (
              <div class="bg-white dark:bg-slate-800 rounded-2xl p-6 border border-slate-200 dark:border-slate-700">
                <h3 class="text-lg font-bold text-slate-900 dark:text-white mb-4">From the Hub</h3>
                <a href={`/hub/${thred.hub.slug}`} class="flex items-center space-x-3 p-3 rounded-lg hover:bg-slate-50 dark:hover:bg-slate-700 transition-colors">
                  <div class="w-12 h-12 rounded-lg flex items-center justify-center text-2xl" style={`background-color: ${thred.hub.color}20`}>
                    {thred.hub.icon}
                  </div>
                  <div>
                    <div class="font-semibold text-slate-900 dark:text-white">{thred.hub.name}</div>
                    <div class="text-sm text-slate-500 dark:text-slate-400">{thred.hub.description}</div>
                  </div>
                </a>
              </div>
            )}
            
            <!-- Related Threds -->
            {relatedThreds.length > 0 && (
              <div class="bg-white dark:bg-slate-800 rounded-2xl p-6 border border-slate-200 dark:border-slate-700">
                <h3 class="text-lg font-bold text-slate-900 dark:text-white mb-4">More from this Hub</h3>
                <div class="space-y-4">
                  {relatedThreds.map((relatedThred) => (
                    <a href={`/thred/${relatedThred.slug}`} class="block group">
                      <div class="text-sm font-medium text-slate-900 dark:text-white group-hover:text-primary-600 dark:group-hover:text-primary-400 transition-colors line-clamp-2 mb-1">
                        {relatedThred.title}
                      </div>
                      <div class="flex items-center space-x-2 text-xs text-slate-500 dark:text-slate-400">
                        <span>‚ö° {relatedThred.loopScore}</span>
                        <span>‚Ä¢</span>
                        <span>{formatDistanceToNow(new Date(relatedThred.timestamp), { addSuffix: true })}</span>
                      </div>
                    </a>
                  ))}
                </div>
              </div>
            )}
          </div>
        </aside>
      </div>
    </div>

    <!-- Related Threds Section -->
    {relatedThreds.length > 0 && (
      <section class="bg-white dark:bg-slate-800 py-16">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div class="text-center mb-12">
            <h2 class="text-2xl lg:text-3xl font-bold text-slate-900 dark:text-white mb-4">More from {thred.hub?.name}</h2>
            <p class="text-slate-600 dark:text-slate-400">Continue exploring this hub</p>
          </div>
          <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
            {relatedThreds.map((relatedThred, index) => (
              <div class="animate-slide-up" style={`animation-delay: ${index * 0.1}s`}>
                <ThredCard thred={relatedThred} />
              </div>
            ))}
          </div>
        </div>
      </section>
    )}
  </main>

  <Footer />
</Layout>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  .prose {
    color: theme('colors.slate.700');
  }
  
  .dark .prose {
    color: theme('colors.slate.300');
  }
  
  .prose h2, .prose h3, .prose h4 {
    color: theme('colors.slate.900');
    font-weight: 700;
    margin-top: 2rem;
    margin-bottom: 1rem;
  }
  
  .dark .prose h2, .dark .prose h3, .dark .prose h4 {
    color: theme('colors.white');
  }
  
  .prose p {
    margin-bottom: 1.5rem;
    line-height: 1.7;
  }
  
  .prose a {
    color: theme('colors.primary.600');
    text-decoration: underline;
    text-decoration-color: theme('colors.primary.300');
    text-underline-offset: 4px;
    transition: all 0.2s;
  }
  
  .prose a:hover {
    color: theme('colors.primary.700');
    text-decoration-color: theme('colors.primary.500');
  }
  
  .dark .prose a {
    color: theme('colors.primary.400');
    text-decoration-color: theme('colors.primary.600');
  }
  
  .dark .prose a:hover {
    color: theme('colors.primary.300');
    text-decoration-color: theme('colors.primary.400');
  }
</style>