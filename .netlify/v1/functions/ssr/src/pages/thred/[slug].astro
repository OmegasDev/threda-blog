---
import { formatDistanceToNow } from 'date-fns';
import Layout from '../../layouts/Layout.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import ThredCard from '../../components/ThredCard.astro';
import { dummyThreds } from '../../lib/dummyData';

export async function getStaticPaths() {
  const threds = dummyThreds;
  return threds.map((thred) => ({
    params: { slug: thred.slug },
  }));
}

const { slug } = Astro.params;
const thred = dummyThreds.find(t => t.slug === slug);

if (!thred) {
  return Astro.redirect('/404');
}

// Get related threds
const relatedThreds = dummyThreds
  .filter(t => t.hub_id === thred.hub_id && t.id !== thred.id)
  .slice(0, 3);

const timeAgo = formatDistanceToNow(new Date(thred.timestamp), { addSuffix: true });
---

<Layout 
  title={`${thred.title} - Threda`}
  description={thred.summary}
  ogImage={thred.featured_image}
>
  <Header />
  
  <main class="min-h-screen bg-slate-50 dark:bg-slate-900">
    <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-4 md:py-8">
      <!-- Mobile-optimized thread layout -->
      <article class="bg-white dark:bg-slate-800 rounded-2xl border border-slate-200 dark:border-slate-700 overflow-hidden">
        <!-- Thread Header - Twitter-like -->
        <div class="p-4 md:p-6 border-b border-slate-200 dark:border-slate-700">
          <!-- Breadcrumb - Desktop only -->
          <nav class="hidden md:flex items-center space-x-2 text-sm text-slate-500 dark:text-slate-400 mb-4">
            <a href="/" class="hover:text-primary-600 dark:hover:text-primary-400 transition-colors">The Loop</a>
            <span>/</span>
            {thred.hub && (
              <>
                <a 
                  href={`/hub/${thred.hub.slug}`} 
                  class="hover:text-primary-600 dark:hover:text-primary-400 transition-colors flex items-center"
                >
                  <span class="mr-1">{thred.hub.icon}</span>
                  {thred.hub.name}
                </a>
                <span>/</span>
              </>
            )}
            <span class="text-slate-400 dark:text-slate-500 truncate">Thred</span>
          </nav>

          <!-- Source & Author Info - Twitter style -->
          <div class="flex items-start space-x-3 mb-4">
            <div class="w-12 h-12 bg-primary-100 dark:bg-primary-900/30 rounded-full flex items-center justify-center flex-shrink-0">
              <span class="text-primary-600 dark:text-primary-400 font-bold text-lg">
                {thred.source.charAt(0)}
              </span>
            </div>
            <div class="flex-1 min-w-0">
              <div class="flex items-center space-x-2">
                <span class="font-bold text-slate-900 dark:text-white">{thred.source}</span>
                <span class="text-slate-500 dark:text-slate-400">@{thred.source.toLowerCase().replace(/\s+/g, '')}</span>
              </div>
              <div class="text-sm text-slate-500 dark:text-slate-400">
                By {thred.author} ‚Ä¢ <time datetime={thred.timestamp}>{timeAgo}</time>
              </div>
            </div>
          </div>

          <!-- Breaking/Trending Badges -->
          <div class="flex items-center space-x-2 mb-4">
            {thred.isBreaking && (
              <div class="flex items-center space-x-1 bg-red-500 text-white px-3 py-1 rounded-full text-sm font-bold">
                <span class="w-2 h-2 bg-white rounded-full animate-pulse"></span>
                <span>BREAKING</span>
              </div>
            )}
            {thred.isTrending && (
              <div class="flex items-center space-x-1 bg-orange-500 text-white px-3 py-1 rounded-full text-sm font-bold">
                <span>üî•</span>
                <span>TRENDING</span>
              </div>
            )}
            {thred.hub && (
              <a 
                href={`/hub/${thred.hub.slug}`}
                class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium text-white hover:opacity-90 transition-opacity"
                style={`background-color: ${thred.hub.color}`}
              >
                <span class="mr-1">{thred.hub.icon}</span>
                {thred.hub.name}
              </a>
            )}
          </div>
        </div>
        
        <!-- Thread Content -->
        <div class="p-4 md:p-6">
          <!-- Title - Thread style -->
          <h1 class="text-xl md:text-3xl font-bold text-slate-900 dark:text-white mb-4 leading-tight">
            {thred.title}
          </h1>
          
          <!-- Summary - Highlighted -->
          <div class="text-base md:text-lg text-slate-700 dark:text-slate-300 leading-relaxed mb-6 p-4 bg-primary-50 dark:bg-primary-900/20 rounded-xl border-l-4 border-primary-500">
            {thred.summary}
          </div>

          <!-- Featured Image -->
          {thred.featured_image && (
            <div class="mb-6">
              <img 
                src={thred.featured_image} 
                alt={thred.title}
                class="w-full h-48 md:h-80 object-cover rounded-xl"
              />
            </div>
          )}

          <!-- Content - Thread style paragraphs -->
          <div class="prose prose-slate dark:prose-invert max-w-none mb-6 space-y-4">
            <div set:html={thred.content}></div>
          </div>

          <!-- Meta Info -->
          <div class="flex flex-wrap items-center gap-4 text-sm text-slate-500 dark:text-slate-400 mb-6 p-3 bg-slate-50 dark:bg-slate-700/50 rounded-lg">
            <div class="flex items-center space-x-1">
              <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
              </svg>
              <span>{thred.readTime} min read</span>
            </div>
            <div class="flex items-center space-x-1">
              <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
              </svg>
              <span>{thred.viewCount?.toLocaleString() || '0'} views</span>
            </div>
            <div class="flex items-center space-x-1 text-primary-600 dark:text-primary-400 font-bold">
              <span>‚ö°</span>
              <span>{thred.loopScore} Loop Score</span>
            </div>
          </div>

          <!-- Tags -->
          <div class="flex flex-wrap gap-2 mb-6">
            {thred.tags.map((tag) => (
              <span class="px-3 py-1 bg-slate-100 dark:bg-slate-700 text-slate-600 dark:text-slate-300 text-sm rounded-full hover:bg-primary-100 dark:hover:bg-primary-900/30 transition-colors cursor-pointer">
                #{tag}
              </span>
            ))}
          </div>
        </div>

        <!-- Action Bar - Twitter style -->
        <div class="border-t border-slate-200 dark:border-slate-700 p-4">
          <div class="flex items-center justify-between">
            <div class="flex items-center space-x-6">
              <button class="flex items-center space-x-2 text-slate-500 dark:text-slate-400 hover:text-blue-500 transition-colors group">
                <div class="p-2 rounded-full group-hover:bg-blue-50 dark:group-hover:bg-blue-900/20 transition-colors">
                  <span class="text-lg">üí¨</span>
                </div>
                <span class="text-sm font-medium">{thred.discussCount}</span>
              </button>
              
              <button class="flex items-center space-x-2 text-slate-500 dark:text-slate-400 hover:text-green-500 transition-colors group">
                <div class="p-2 rounded-full group-hover:bg-green-50 dark:group-hover:bg-green-900/20 transition-colors">
                  <span class="text-lg">üîÑ</span>
                </div>
                <span class="text-sm font-medium">{thred.shareCount}</span>
              </button>
              
              <button class="flex items-center space-x-2 text-slate-500 dark:text-slate-400 hover:text-red-500 transition-colors group">
                <div class="p-2 rounded-full group-hover:bg-red-50 dark:group-hover:bg-red-900/20 transition-colors">
                  <span class="text-lg">‚ù§Ô∏è</span>
                </div>
                <span class="text-sm font-medium">{thred.saveCount}</span>
              </button>
            </div>
            
            <button class="flex items-center space-x-2 text-slate-500 dark:text-slate-400 hover:text-primary-600 dark:hover:text-primary-400 transition-colors">
              <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8.684 13.342C8.886 12.938 9 12.482 9 12c0-.482-.114-.938-.316-1.342m0 2.684a3 3 0 110-2.684m0 2.684l6.632 3.316m-6.632-6l6.632-3.316m0 0a3 3 0 105.367-2.684 3 3 0 00-5.367 2.684zm0 9.316a3 3 0 105.367 2.684 3 3 0 00-5.367-2.684z"></path>
              </svg>
            </button>
          </div>
        </div>
      </article>

      <!-- Hub Info Card -->
      {thred.hub && (
        <div class="mt-6 bg-white dark:bg-slate-800 rounded-2xl p-6 border border-slate-200 dark:border-slate-700">
          <h3 class="text-lg font-bold text-slate-900 dark:text-white mb-4">More from this Hub</h3>
          <a href={`/hub/${thred.hub.slug}`} class="flex items-center space-x-4 p-4 rounded-xl hover:bg-slate-50 dark:hover:bg-slate-700 transition-colors group">
            <div class="w-16 h-16 rounded-xl flex items-center justify-center text-3xl" style={`background-color: ${thred.hub.color}20`}>
              {thred.hub.icon}
            </div>
            <div class="flex-1">
              <div class="font-bold text-slate-900 dark:text-white group-hover:text-primary-600 dark:group-hover:text-primary-400 transition-colors">
                {thred.hub.name}
              </div>
              <div class="text-sm text-slate-500 dark:text-slate-400 mb-2">{thred.hub.description}</div>
              <div class="flex items-center space-x-4 text-xs text-slate-500 dark:text-slate-400">
                <span>{thred.hub.followerCount?.toLocaleString() || '0'} followers</span>
                <span>{thred.hub.thredCount || 0} threds</span>
              </div>
            </div>
            <svg class="w-5 h-5 text-slate-400 group-hover:text-primary-600 dark:group-hover:text-primary-400 transition-colors" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
            </svg>
          </a>
        </div>
      )}

      <!-- Related Threds -->
      {relatedThreds.length > 0 && (
        <div class="mt-6">
          <h3 class="text-xl font-bold text-slate-900 dark:text-white mb-6">Related Threds</h3>
          <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            {relatedThreds.map((relatedThred, index) => (
              <div class="animate-slide-up" style={`animation-delay: ${index * 0.1}s`}>
                <ThredCard thred={relatedThred} variant="compact" />
              </div>
            ))}
          </div>
        </div>
      )}
    </div>
  </main>

  <Footer />
</Layout>

<style>
  .prose {
    color: theme('colors.slate.700');
  }
  
  .dark .prose {
    color: theme('colors.slate.300');
  }
  
  .prose h2, .prose h3, .prose h4 {
    color: theme('colors.slate.900');
    font-weight: 700;
    margin-top: 1.5rem;
    margin-bottom: 0.75rem;
  }
  
  .dark .prose h2, .dark .prose h3, .dark .prose h4 {
    color: theme('colors.white');
  }
  
  .prose p {
    margin-bottom: 1rem;
    line-height: 1.7;
  }
  
  .prose a {
    color: theme('colors.primary.600');
    text-decoration: underline;
    text-decoration-color: theme('colors.primary.300');
    text-underline-offset: 4px;
    transition: all 0.2s;
  }
  
  .prose a:hover {
    color: theme('colors.primary.700');
    text-decoration-color: theme('colors.primary.500');
  }
  
  .dark .prose a {
    color: theme('colors.primary.400');
    text-decoration-color: theme('colors.primary.600');
  }
  
  .dark .prose a:hover {
    color: theme('colors.primary.300');
    text-decoration-color: theme('colors.primary.400');
  }
</style>