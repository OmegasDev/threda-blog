---
import Layout from '../../layouts/Layout.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
---

<Layout 
  title="Hub Dashboard - Threda"
  description="Manage your hubs and track their performance."
>
  <Header />
  
  <main class="min-h-screen bg-slate-50 dark:bg-slate-900">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
      <!-- Header -->
      <div class="mb-8">
        <h1 class="text-3xl font-bold text-slate-900 dark:text-white mb-2">
          Hub Dashboard
        </h1>
        <p class="text-slate-600 dark:text-slate-400">
          Manage your hubs and track their performance
        </p>
      </div>

      <!-- Dashboard Content -->
      <div id="dashboard-content">
        <!-- Loading State -->
        <div id="loading-state" class="text-center py-20">
          <div class="animate-spin rounded-full h-12 w-12 border-b-2 border-primary-600 mx-auto mb-4"></div>
          <p class="text-slate-600 dark:text-slate-400">Loading your hubs...</p>
        </div>

        <!-- No Hubs State -->
        <div id="no-hubs-state" class="hidden text-center py-20">
          <div class="w-24 h-24 bg-primary-100 dark:bg-primary-900/30 rounded-full flex items-center justify-center mx-auto mb-6">
            <svg class="w-12 h-12 text-primary-600 dark:text-primary-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10"></path>
            </svg>
          </div>
          <h3 class="text-2xl font-bold text-slate-900 dark:text-white mb-4">No Hubs Yet</h3>
          <p class="text-slate-600 dark:text-slate-400 max-w-md mx-auto mb-6">
            Create your first hub to start building a community around topics you're passionate about.
          </p>
          <a 
            href="/create-hub"
            class="inline-flex items-center px-6 py-3 bg-primary-600 hover:bg-primary-700 text-white font-semibold rounded-lg transition-colors"
          >
            <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
            </svg>
            Create Your First Hub
          </a>
        </div>

        <!-- Hubs Grid -->
        <div id="hubs-grid" class="hidden grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-6">
          <!-- Hub cards will be inserted here -->
        </div>
      </div>
    </div>
  </main>

  <Footer />
</Layout>

<script>
  import { getCurrentUser, supabase } from '../../lib/auth';

  document.addEventListener('DOMContentLoaded', async function() {
    const loadingState = document.getElementById('loading-state');
    const noHubsState = document.getElementById('no-hubs-state');
    const hubsGrid = document.getElementById('hubs-grid');

    try {
      const user = await getCurrentUser();
      if (!user) {
        window.location.href = '/';
        return;
      }

      // Fetch user's hubs
      const { data: hubs, error } = await supabase
        .from('user_hubs')
        .select('*')
        .eq('created_by', user.id)
        .order('created_at', { ascending: false });

      if (error) throw error;

      loadingState?.classList.add('hidden');

      if (!hubs || hubs.length === 0) {
        noHubsState?.classList.remove('hidden');
        return;
      }

      hubsGrid?.classList.remove('hidden');
      
      // Render hub cards
      hubs.forEach(hub => {
        const hubCard = createHubCard(hub);
        hubsGrid?.appendChild(hubCard);
      });

    } catch (error) {
      console.error('Error loading hubs:', error);
      loadingState?.classList.add('hidden');
      noHubsState?.classList.remove('hidden');
    }
  });

  function createHubCard(hub) {
    const card = document.createElement('div');
    card.className = 'bg-white dark:bg-slate-800 rounded-2xl p-6 border border-slate-200 dark:border-slate-700';
    
    const categoryColors = {
      'Tech': '#3b82f6',
      'Crypto': '#f59e0b',
      'Finance': '#10b981',
      'Politics': '#ef4444',
      'Business': '#8b5cf6'
    };

    const categoryIcons = {
      'Tech': 'üíª',
      'Crypto': '‚Çø',
      'Finance': 'üìà',
      'Politics': 'üèõÔ∏è',
      'Business': 'üíº'
    };

    const color = categoryColors[hub.category] || '#6366f1';
    const icon = categoryIcons[hub.category] || 'üåü';

    card.innerHTML = `
      <div class="flex items-start space-x-4 mb-4">
        <div class="w-12 h-12 rounded-xl flex items-center justify-center text-2xl flex-shrink-0" style="background: linear-gradient(135deg, ${color}20, ${color}40)">
          ${icon}
        </div>
        <div class="flex-1 min-w-0">
          <h3 class="font-bold text-slate-900 dark:text-white truncate">${hub.name}</h3>
          <p class="text-sm text-slate-500 dark:text-slate-400">${hub.category}</p>
        </div>
        <div class="flex items-center space-x-1">
          <div class="w-2 h-2 rounded-full ${hub.is_public ? 'bg-green-500' : 'bg-yellow-500'}"></div>
          <span class="text-xs text-slate-500 dark:text-slate-400">${hub.is_public ? 'Public' : 'Private'}</span>
        </div>
      </div>

      <p class="text-slate-600 dark:text-slate-300 text-sm mb-4 line-clamp-2">${hub.description}</p>

      <div class="grid grid-cols-3 gap-4 mb-4 p-3 bg-slate-50 dark:bg-slate-700/50 rounded-lg">
        <div class="text-center">
          <div class="font-bold text-slate-900 dark:text-white">${hub.follower_count}</div>
          <div class="text-xs text-slate-500 dark:text-slate-400">Followers</div>
        </div>
        <div class="text-center">
          <div class="font-bold text-slate-900 dark:text-white">${hub.post_count}</div>
          <div class="text-xs text-slate-500 dark:text-slate-400">Threds</div>
        </div>
        <div class="text-center">
          <div class="font-bold text-slate-900 dark:text-white">${hub.total_views.toLocaleString()}</div>
          <div class="text-xs text-slate-500 dark:text-slate-400">Views</div>
        </div>
      </div>

      <div class="flex items-center justify-between">
        <a 
          href="/hub/${hub.slug}"
          class="text-primary-600 dark:text-primary-400 hover:text-primary-700 dark:hover:text-primary-300 font-medium text-sm transition-colors"
        >
          View Hub ‚Üí
        </a>
        <div class="flex items-center space-x-2">
          <button 
            onclick="editHub('${hub.id}')"
            class="px-3 py-1.5 bg-slate-200 dark:bg-slate-700 hover:bg-slate-300 dark:hover:bg-slate-600 text-slate-700 dark:text-slate-300 text-sm font-medium rounded-lg transition-colors"
          >
            Edit
          </button>
        </div>
      </div>

      ${hub.follower_count >= 100 ? `
        <div class="mt-4 p-3 bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-800 rounded-lg">
          <div class="flex items-center space-x-2">
            <svg class="w-4 h-4 text-green-600 dark:text-green-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
            </svg>
            <span class="text-sm font-medium text-green-800 dark:text-green-200">Monetization Eligible</span>
          </div>
          <p class="text-xs text-green-600 dark:text-green-400 mt-1">Your hub qualifies for monetization features!</p>
        </div>
      ` : `
        <div class="mt-4 p-3 bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800 rounded-lg">
          <div class="flex items-center justify-between">
            <div>
              <div class="text-sm font-medium text-blue-800 dark:text-blue-200">Monetization Progress</div>
              <div class="text-xs text-blue-600 dark:text-blue-400">${hub.follower_count}/100 followers needed</div>
            </div>
            <div class="text-right">
              <div class="text-sm font-bold text-blue-800 dark:text-blue-200">${Math.round((hub.follower_count / 100) * 100)}%</div>
            </div>
          </div>
          <div class="mt-2 w-full bg-blue-200 dark:bg-blue-800 rounded-full h-2">
            <div class="bg-blue-600 h-2 rounded-full" style="width: ${Math.min((hub.follower_count / 100) * 100, 100)}%"></div>
          </div>
        </div>
      `}
    `;

    return card;
  }

  function editHub(hubId) {
    // For now, just redirect to the hub page
    // In a full implementation, this would open an edit modal
    alert('Edit functionality coming soon!');
  }
</script>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>